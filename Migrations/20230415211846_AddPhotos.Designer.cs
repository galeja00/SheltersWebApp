// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using cv8_ASP.NET_v2.Models;

#nullable disable

namespace cv8_ASP.NET_v2.Migrations
{
    [DbContext(typeof(HarborContext))]
    [Migration("20230415211846_AddPhotos")]
    partial class AddPhotos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.2.23128.3")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("cv8_ASP.NET_v2.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DescriptiveNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrientationNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("cv8_ASP.NET_v2.Models.Dog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("HarbarID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("photoImg")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("HarbarID");

                    b.ToTable("Dogs");
                });

            modelBuilder.Entity("cv8_ASP.NET_v2.Models.Harbar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AddressID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LogoImg")
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxCapacity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UseCapacity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AddressID");

                    b.ToTable("Harbars");
                });

            modelBuilder.Entity("cv8_ASP.NET_v2.Models.Dog", b =>
                {
                    b.HasOne("cv8_ASP.NET_v2.Models.Harbar", "Harbar")
                        .WithMany("Dogs")
                        .HasForeignKey("HarbarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Harbar");
                });

            modelBuilder.Entity("cv8_ASP.NET_v2.Models.Harbar", b =>
                {
                    b.HasOne("cv8_ASP.NET_v2.Models.Address", "Address")
                        .WithMany("Harbers")
                        .HasForeignKey("AddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("cv8_ASP.NET_v2.Models.Address", b =>
                {
                    b.Navigation("Harbers");
                });

            modelBuilder.Entity("cv8_ASP.NET_v2.Models.Harbar", b =>
                {
                    b.Navigation("Dogs");
                });
#pragma warning restore 612, 618
        }
    }
}
